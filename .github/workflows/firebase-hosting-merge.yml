name: Deploy to Firebase Hosting on merge

on:
    push:
        branches:
            - master

jobs:
    # Установка зависимостей
    install_dependencies:
        runs-on: ubuntu-latest
        outputs:
            cache-hit: ${{ steps.cache.outputs.cache-hit }}
        steps:
            - uses: actions/checkout@v4

            # Кэширование node_modules
            - name: Cache Node Modules
              id: cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            # Установка зависимостей, если кэш отсутствует
            - name: Install dependencies
              if: steps.cache.outputs.cache-hit != 'true'
              run: npm ci

    # Линтинг
    lint:
        runs-on: ubuntu-latest
        needs: install_dependencies
        steps:
            - uses: actions/checkout@v4

            # Кэширование node_modules
            - name: Restore Node Modules Cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            # Шаг проверки ESLint
            - name: Run ESLint
              run: npm run lint

    # Деплой
    deploy:
        runs-on: ubuntu-latest
        needs: [install_dependencies, lint] # Зависимость от обоих jobs
        steps:
            - uses: actions/checkout@v4

            # Кэширование node_modules
            - name: Restore Node Modules Cache
              uses: actions/cache@v3
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            # Сборка
            - name: Build PWA
              run: npm run build:pwa

            # Деплой
            - uses: FirebaseExtended/action-hosting-deploy@v0
              with:
                  repoToken: ${{ secrets.GITHUB_TOKEN }}
                  firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CASHLY_APP_1215E }}
                  channelId: live
                  projectId: cashly-app-1215e
